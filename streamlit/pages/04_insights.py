# Page: 04_insights.py
from pathlib import Path
import sys

project_utils = Path(__file__).parent.parent
sys.path.append(str(project_utils))

import streamlit as st
import pandas as pd
import numpy as np
from utils.metrics import get_feature_importance, load_shap_values
from utils.plots import plot_shap_summary, plot_shap_importance
from utils.data_loader import load_dataset

st.set_page_config(
    page_title="Insights de Churn",
    page_icon="üí°",
    layout="wide"
)

st.title("üí° Insights Globais e Recomenda√ß√µes Estrat√©gicas")
st.markdown("""
An√°lise consolidada dos principais fatores que causam churn e recomenda√ß√µes 
acion√°veis baseadas em dados e interpretabilidade do modelo (SHAP).
""")

# Carrega dados
def load_insights_data():
    shap_values, expected_value, feature_names = load_shap_values()
    feature_importance_dict = get_feature_importance(shap_values, feature_names)
    data = load_dataset()
    return shap_values, expected_value, feature_names, feature_importance_dict, data

try:
    shap_values, expected_value, feature_names, feature_importance_dict, data = load_insights_data()
except Exception as e:
    st.error(f"Erro ao carregar dados: {str(e)}")
    st.stop()

# 1. Vis√£o Geral
st.header("1. Principais Fatores de Churn")

with st.expander("Import√¢ncia Global das Features", expanded=True):
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.plotly_chart(plot_shap_importance(shap_values, feature_names))
    
    with col2:
        st.markdown("### Top 5 Features")
        top_features = list(feature_importance_dict.items())[:5]
        
        for i, (feature, importance) in enumerate(top_features, 1):
            st.markdown(f"**{i}. {feature}**")
            st.progress(float(importance / max(feature_importance_dict.values())))
            st.caption(f"Import√¢ncia: {importance:.4f}")
            st.markdown("")

# 2. SHAP Summary Plot
st.header("2. An√°lise Detalhada de Impacto")

with st.expander("SHAP Summary Plot", expanded=True):
    st.plotly_chart(plot_shap_summary(shap_values, feature_names))
    
    st.info("""
    **Como interpretar este gr√°fico:**
    
    - **Posi√ß√£o vertical**: Import√¢ncia da feature (mais acima = mais importante)
    - **Posi√ß√£o horizontal**: Impacto no churn (direita = aumenta, esquerda = diminui)
    - **Cor**: Valor da feature (vermelho = alto, azul = baixo)
    
    **Exemplo**: Se "Contract_Month-to-month" aparece muito √† direita em vermelho,
    significa que ter contrato mensal (valor alto) aumenta muito o risco de churn.
    """)

# 3. Insights Acion√°veis
st.header("3. Insights e Recomenda√ß√µes por Categoria")

tab1, tab2, tab3, tab4 = st.tabs(["üìù Contratos", "üí∞ Pagamentos", "üåê Servi√ßos", "üë• Perfil do Cliente"])

with tab1:
    st.markdown("### Contratos e Fideliza√ß√£o")
    
    col_a, col_b = st.columns(2)
    
    with col_a:
        st.markdown("""
        **üìä Insights Identificados:**
        
        - Contratos mensais t√™m 3-4x mais churn que contratos anuais
        - Clientes novos (<12 meses) s√£o mais vulner√°veis
        - Falta de compromisso de longo prazo aumenta risco
        """)
    
    with col_b:
        st.markdown("""
        **‚úÖ Recomenda√ß√µes:**
        
        1. Oferecer incentivos para migra√ß√£o de mensal ‚Üí anual
        2. Desconto progressivo por tempo de perman√™ncia
        3. Bonifica√ß√£o para contratos de 12+ meses
        4. Programa de fidelidade com benef√≠cios crescentes
        """)
    
    st.success("**A√ß√£o priorit√°ria**: Criar campanha de convers√£o mensal ‚Üí anual com benef√≠cio tang√≠vel (15-20% desconto no primeiro ano).")

with tab2:
    st.markdown("### M√©todos de Pagamento")
    
    col_a, col_b = st.columns(2)
    
    with col_a:
        st.markdown("""
        **üìä Insights Identificados:**
        
        - Electronic check associado a maior taxa de churn
        - Falta de automa√ß√£o pode indicar menor engajamento
        - M√©todos autom√°ticos (d√©bito/cr√©dito) t√™m menor risco
        """)
    
    with col_b:
        st.markdown("""
        **‚úÖ Recomenda√ß√µes:**
        
        1. Incentivar migra√ß√£o para d√©bito autom√°tico
        2. Oferecer desconto para pagamento recorrente
        3. Facilitar cadastro de cart√£o de cr√©dito
        4. Alertas proativos de vencimento
        """)
    
    st.success("**A√ß√£o priorit√°ria**: Cashback ou desconto de 5% para quem migrar de boleto ‚Üí d√©bito autom√°tico.")

with tab3:
    st.markdown("### Servi√ßos e Satisfa√ß√£o")
    
    col_a, col_b = st.columns(2)
    
    with col_a:
        st.markdown("""
        **üìä Insights Identificados:**
        
        - Fibra √≥tica tem maior churn (expectativa alta vs realidade)
        - Falta de servi√ßos adicionais (seguran√ßa, suporte)
        - Clientes sem suporte t√©cnico t√™m maior rotatividade
        - M√∫ltiplas linhas reduzem churn (maior depend√™ncia do servi√ßo)
        - Streaming incluso aumenta reten√ß√£o
        """)
    
    with col_b:
        st.markdown("""
        **‚úÖ Recomenda√ß√µes:**
        
        1. **Bundle de servi√ßos**: Oferecer pacotes com seguran√ßa + streaming
        2. **Suporte proativo**: Contato regular para verificar qualidade da fibra
        3. **Programa de indica√ß√£o**: Benef√≠cios para clientes que indicam m√∫ltiplas linhas
        4. **Teste gratuito**: 30 dias de servi√ßos premium para clientes em risco
        5. **Monitoramento de qualidade**: Alertas autom√°ticos para problemas t√©cnicos
        """)
    
    st.success("**A√ß√£o priorit√°ria**: Criar pacote 'Fibra Premium' incluindo seguran√ßa digital + streaming por 20% a mais.")

with tab4:
    st.markdown("### Perfil do Cliente")
    
    col_a, col_b = st.columns(2)
    
    with col_a:
        st.markdown("""
        **üìä Insights Identificados:**
        
        - Idosos (>65 anos) t√™m menor churn (menos compara√ß√£o de pre√ßos)
        - Clientes com dependentes s√£o mais fi√©is
        - Solteiros t√™m maior rotatividade que casados
        - Clientes urbanos mais propensos a trocar de operadora
        - Baixa renda associada a maior instabilidade
        """)
    
    with col_b:
        st.markdown("""
        **‚úÖ Recomenda√ß√µes:**
        
        1. **Programa fam√≠lia**: Descontos progressivos por dependentes
        2. **Plano s√™nior**: Benef√≠cios espec√≠ficos para +65 anos
        3. **Casais**: Ofertas conjuntas e b√¥nus de anivers√°rio
        4. **Comunidades**: Parcerias com associa√ß√µes de bairro
        5. **Planos sociais**: Op√ß√µes acess√≠veis para baixa renda
        """)
    
    st.success("**A√ß√£o priorit√°ria**: Lan√ßar programa 'Fam√≠lia Plus' com desconto de 10% a partir do 2¬∫ dependente.")

# 4. Segmenta√ß√£o Estrat√©gica
st.header("4. Segmenta√ß√£o de Clientes para A√ß√µes Espec√≠ficas")

with st.expander("Estrat√©gias por Perfil", expanded=True):
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("""
        ### üö® Alto Risco
        **Perfil**: Contrato mensal + Electronic check + Fibra √≥tica
        
        **A√ß√µes**:
        - Contato proativo a cada 3 meses
        - Oferta de migra√ß√£o para anual com 25% desconto
        - Convite para programa de fidelidade
        - Monitoramento de satisfa√ß√£o cont√≠nuo
        """)
    
    with col2:
        st.markdown("""
        ### ‚ö†Ô∏è M√©dio Risco  
        **Perfil**: Contrato anual + D√©bito autom√°tico + M√∫ltiplos servi√ßos
        
        **A√ß√µes**:
        - Pesquisa de satisfa√ß√£o semestral
        - Ofertas de upgrades de servi√ßo
        - Comunica√ß√£o sobre novos benef√≠cios
        - Programa de indica√ß√£o
        """)
    
    with col3:
        st.markdown("""
        ### ‚úÖ Baixo Risco
        **Perfil**: Contrato longo + M√∫ltiplas linhas + Idoso/casado
        
        **A√ß√µes**:
        - Manuten√ß√£o do relacionamento
        - Agradecimento pela fidelidade
        - Pequenos benef√≠cios surpresa
        - Pedido de depoimento/indica√ß√£o
        """)

# 5. M√©tricas de Impacto Esperado
st.header("5. Proje√ß√£o de Resultados")

with st.expander("Estimativa de Impacto das A√ß√µes", expanded=True):
    st.markdown("""
    **Redu√ß√£o Esperada de Churn por Iniciativa:**
    
    | Iniciativa | Impacto Esperado | ROI Estimado |
    |------------|------------------|--------------|
    | Convers√£o mensal ‚Üí anual | 15-20% redu√ß√£o | Alto |
    | Migra√ß√£o para d√©bito autom√°tico | 8-12% redu√ß√£o | M√©dio-Alto |
    | Bundle de servi√ßos | 10-15% redu√ß√£o | M√©dio |
    | Programas familiares | 5-8% redu√ß√£o | M√©dio |
    | Suporte proativo | 12-18% redu√ß√£o | Alto |
    """)
    
    st.warning("""
    **‚ö†Ô∏è Considera√ß√µes Importantes:**
    
    - Custo de aquisi√ß√£o de novo cliente √© 5x maior que reten√ß√£o
    - Clientes retidos aumentam valor vital√≠cio em 25-40%
    - Satisfa√ß√£o do cliente impacta diretamente no NPS e reputa√ß√£o
    """)

# 6. Pr√≥ximos Passos
st.header("6. Plano de A√ß√£o Imediato")

with st.expander("Checklist de Implementa√ß√£o", expanded=True):
    st.markdown("""
    **üìÖ Primeiras 4 Semanas:**
    
    - [ ] Desenvolver campanha de migra√ß√£o mensal ‚Üí anual
    - [ ] Criar sistema de incentivo para d√©bito autom√°tico  
    - [ ] Implementar segmenta√ß√£o por risco no CRM
    - [ ] Treinar equipe de reten√ß√£o nas novas estrat√©gias
    
    **üìÖ Pr√≥ximos 60 Dias:**
    
    - [ ] Lan√ßar programa de fidelidade familiar
    - [ ] Desenvolver pacotes de servi√ßos adicionais
    - [ ] Implementar monitoramento cont√≠nuo de satisfa√ß√£o
    - [ ] Criar dashboard de m√©tricas de reten√ß√£o
    
    **üìÖ Trimestre 2:**
    
    - [ ] Expandir para segmentos espec√≠ficos (s√™nior, empresas)
    - [ ] Desenvolver programa de indica√ß√£o
    - [ ] Otimizar estrat√©gias baseado em resultados
    - [ ] Escalar iniciativas bem-sucedidas
    """)

# Navega√ß√£o
st.markdown("---")
st.markdown("## Navega√ß√£o")

col_nav1, col_nav2, col_nav3 = st.columns(3)

with col_nav1:
    if st.button("‚Üê Voltar para Simulador"):
        st.switch_page("pages/03_simulator.py")

with col_nav2:
    if st.button("Ir para Calibra√ß√£o ‚Üí"):
        st.switch_page("pages/05_calibration.py")

with col_nav3:
    if st.button("üè† Home"):
        st.switch_page("00_home.py")

# Rodap√©
st.markdown("---")
st.markdown("""
<div style='text-align: center'>
    <i>Dashboard de An√°lise de Churn | Desenvolvido por Alisson Ursulino</i>
</div>
""", unsafe_allow_html=True)