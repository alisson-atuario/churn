# Page: 01_exploratory.py
from pathlib import Path
import sys

# Caminho absoluto para a pasta utils
project_utils = Path(__file__).parent.parent
sys.path.append(str(project_utils))

import streamlit as st
from utils.data_loader import load_dataset
from utils.metrics import calculate_churn_rate, data_categoric,data_raw_treatment,data_categoric
from utils.plots import plot_churn_distribution, plot_histograms_by_churn, plot_numeric_cols_distribution,generate_graph_analyses

data = load_dataset()
churn_rate = calculate_churn_rate(data)

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="An√°lise Explorat√≥ria",
    page_icon="üîç",
    layout="wide",
    initial_sidebar_state="expanded"
)

# T√≠tulo da P√°gina
st.title("An√°lise Explorat√≥ria do Churn")
st.markdown(f"""
An√°lise de {data.shape[0]} clientes com ~{churn_rate['Yes']}% de taxa de churn, 
explorando vari√°veis como tempo de perman√™ncia, gastos mensais, 
tipo de contrato e servi√ßos de internet para identificar padr√µes de cancelamento
""")

#%% 1) Distribui√ß√£o de Churn
st.header("1. Distribui√ß√£o de Churn")   
with st.expander("Visualiza√ß√£o",expanded=True):
    st.plotly_chart(plot_churn_distribution())
    st.info(f"""
    üí° Observa-se um desbalanceamento: ~{churn_rate['No']}% "No" e ~{churn_rate['Yes']}% "Yes". 
    Esse desbalanceamento deve ser levado em conta ao treinar modelos preditivos (pode impactar m√©tricas como acur√°cia).
    """)

#%% 2) Vari√°veis Num√©ricas
st.header("2. An√°lise de Vari√°veis Num√©ricas")
with st.expander("Visualiza√ß√£o",expanded=True):

    numeric_cols = ['tenure', 'MonthlyCharges', 'TotalCharges']
    data = data_raw_treatment()
    available_numeric = [c for c in numeric_cols if c in data.columns]

    numeric_cols = ['tenure', 'MonthlyCharges', 'TotalCharges']
    data = data_raw_treatment()
    available_numeric = [c for c in numeric_cols if c in data.columns]

    # Seletor com todas selecionadas por padr√£o
    selected_vars = st.multiselect(
        "Selecione as vari√°veis para an√°lise:",
        options=available_numeric,
        default=available_numeric,  # Todas selecionadas por padr√£o
        key="var_selector"
    )

    for col in selected_vars:
        st.subheader(f"{col}")
        col_a, col_b = st.columns(2)
        
        with col_a:
            st.plotly_chart(plot_numeric_cols_distribution(col), width='stretch')
        
        with col_b:
            st.plotly_chart(plot_histograms_by_churn(col), width='stretch')
            # st.info("""üí° **Principais Achados da An√°lise Categ√≥rica**  
            #         - Clientes com **contratos mensais** e **at√© 12 meses de perman√™ncia** apresentam risco muito maior de churn.  
            #         - O m√©todo de pagamento tamb√©m pesa: **Electronic check** √© mais associado ao cancelamento.  
            #         - Entre os servi√ßos, **fibra √≥tica** e aus√™ncia de **seguran√ßa/atendimento t√©cnico** elevam a taxa de churn.  
            #         """)

    # Mensagem se nenhuma selecionada
    if not selected_vars:
        st.info("Selecione pelo menos uma vari√°vel para visualizar os gr√°ficos.")
    else:
        st.info(
        """
        **Principais padr√µes observados nos gr√°ficos de violino:**
        - **Tenure (Tempo de Contrato):** O churn √© muito mais frequente nos **primeiros meses (< 12)**.
        A partir de 24 meses, a taxa de churn cai bastante ‚Äî mostrando a import√¢ncia dos **primeiros
        meses como fase cr√≠tica de reten√ß√£o**.

        - **MonthlyCharges (Gasto Mensal):** Clientes com churn apresentam maior concentra√ß√£o de valores
        entre **70‚Äì100**, indicando que **quanto maior o gasto, maior a probabilidade de sa√≠da**.

        - **TotalCharges (Valor Total):** Clientes que cancelaram possuem valores totais mais baixos,
        j√° que interromperam o contrato cedo. Em contrapartida, clientes fi√©is chegam a acumular
        valores acima de **8k**.
        """,icon="üí°"
      )

#%% 3) Vari√°veis Categ√≥ricas
st.header("3. An√°lise de Vari√°veis Categ√≥ricas")
with st.expander("Visualiza√ß√£o",expanded=True):

    categoric_values = data_categoric()
    available_categoric = categoric_values.columns.tolist()
    available_categoric.remove('Churn')

    # Seletor com todas selecionadas por padr√£o
    selected_categoric = st.multiselect(
        "Selecione as vari√°veis para an√°lise:",
        options=available_categoric,
        default=['Contract','tenure_cat','PaymentMethod','InternetService'],  # selecionadas por padr√£o
        key="var_selector_categoric"
    )

    # Mensagem se nenhuma selecionada
    if not selected_categoric:
        st.info("Selecione pelo menos uma vari√°vel para visualizar os gr√°ficos.")
    else:
        for i in range(0,len(selected_categoric),2):
            col_a, col_b = st.columns(2)

            # Primeira Coluna
            with col_a:
                col_name = selected_categoric[i]
                st.subheader(f"{col_name}")
                st.plotly_chart(generate_graph_analyses(col_name), 
                width='stretch',key=f"plot_{col_name}_{i}")

             # Segunda Coluna
            with col_b:
                if i+1 < len(selected_categoric):
                    col_name = selected_categoric[i+1]
                    st.subheader(f"{col_name}")
                    st.plotly_chart(generate_graph_analyses(col_name),
                     width='stretch',key=f"plot_{col_name}_{i+1}")
            


        st.info(
        """
        **Principais Achados da An√°lise Categ√≥rica:**

        - Clientes com **contratos mensais** e **at√© 12 meses de perman√™ncia** apresentam risco muito maior de churn. Isso significa que clientes novos s√£o muito mais vulner√°veis.

        - O m√©todo de pagamento tamb√©m pesa: **Electronic check** √© mais associado ao cancelamento. Pagamentos menos automatizados possuem maior risco de cancelamento.  

        - Entre os servi√ßos, **fibra √≥tica** e aus√™ncia de **seguran√ßa/atendimento t√©cnico** elevam a taxa de churn. Isso pode indicar expectativa alta vs. insatisfa√ß√£o com o servi√ßo.
        
        """,icon="üí°"
        )

st.markdown("---")
st.markdown("## Navega√ß√£o")

col_nav1, col_nav2 = st.columns(2)

with col_nav1:
    if st.button("Ir para Previs√µes ‚Üí", width='stretch'):
        st.switch_page("pages/02_predictions.py")

with col_nav2:
    if st.button("üè† Home", width='stretch'):
        st.switch_page("00_home.py")

# Rodap√©
st.markdown("---")
st.markdown("""
<div style='text-align: center'>
    <i>Dashboard de An√°lise de Churn | Desenvolvido por Alisson Ursulino</i>
</div>
""", unsafe_allow_html=True)